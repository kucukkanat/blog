(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{176:function(e,t,s){"use strict";s.r(t);var a=s(0),n=Object(a.a)({},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"content"},[e._m(0),e._v(" "),s("p",[e._v("To verify the author of the commit this is how the GPG signing your commits work :")]),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),s("p",[e._v("My output is :")]),e._v(" "),e._m(3),s("p",[e._v("If you dont have GPG setup on your computer then "),s("a",{attrs:{href:"https://gnupg.org/download/",target:"_blank",rel:"noopener noreferrer"}},[e._v("download here"),s("OutboundLink")],1)]),e._v(" "),e._m(4),e._v(" "),s("p",[e._v("Run")]),e._v(" "),e._m(5),e._m(6),e._v(" "),e._m(7),e._v(" "),e._m(8),e._m(9),e._v(" "),e._m(10),e._v(" "),s("p",[e._v("The ouput will be like : (Don't worry this is not my key I use currently ðŸ˜ƒ )")]),e._v(" "),e._m(11),e._m(12),e._v(" "),s("p",[e._v("There are two waysto tell your git client with which key to sign. You may want to use different gpg keys for different local repos. For global :")]),e._v(" "),e._m(13),s("p",[e._v("This will tell git to use this key to sign all the local repos.")]),e._v(" "),e._m(14),s("p",[e._v("will instead set the individual repository's pointer to key.")]),e._v(" "),e._m(15),e._v(" "),e._m(16),e._v(" "),e._m(17),s("p",[e._v("If you dont want to add the flag in every single commit you can also set autosign flag to true by running")]),e._v(" "),e._m(18),s("p",[e._v("or")]),e._v(" "),e._m(19),s("p",[e._v("for global.")]),e._v(" "),e._m(20),e._v(" "),s("p",[e._v("Run")]),e._v(" "),e._m(21),s("p",[e._v("to export your public key and paste it to https://gitlab.com/profile/gpg_keys .")]),e._v(" "),s("p",[e._v("Now you are good to go.")]),e._v(" "),e._m(22),e._v(" "),s("p",[e._v("You may have an error after you finish all the steps above like :")]),e._v(" "),e._m(23),s("p",[e._v("GPG needs to know about your "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Tty_(unix)",target:"_blank",rel:"noopener noreferrer"}},[e._v("tty"),s("OutboundLink")],1),e._v(" .\nIn your "),s("code",[e._v(".bash_profile")]),e._v(" (to find your bash profile go to "),s("code",[e._v("echo $HOME")]),e._v(" folder, if it doesn't exist create it) export the variable "),s("code",[e._v("GPG_TTY")]),e._v(".\nAdd this line to your bash profile:")]),e._v(" "),e._m(24),s("p",[e._v("You migh have a different GPG version on your machine previously. In this case you can tell git to use another version's binary to sign by setting your config's binary path like :")]),e._v(" "),e._m(25),e._m(26),e._v(" "),e._m(27)])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"adding-a-gpg-key-to-your-account-to-sign-commits"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#adding-a-gpg-key-to-your-account-to-sign-commits","aria-hidden":"true"}},[this._v("#")]),this._v(" Adding a GPG key to your account to sign commits")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"check-if-you-have-g-nu-pg"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#check-if-you-have-g-nu-pg","aria-hidden":"true"}},[this._v("#")]),this._v(" Check if you have G[NU]PG")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Run "),t("code",[this._v("gpg --version")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("gpg (GnuPG) 2.2.13\nlibgcrypt 1.8.4\nCopyright (C) 2019 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\nHome: /Users/hsahin/.gnupg\nSupported algorithms:\nPubkey: RSA, ELG, DSA, ECDH, ECDSA, EDDSA\nCipher: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256, TWOFISH,\n        CAMELLIA128, CAMELLIA192, CAMELLIA256\nHash: SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224\nCompression: Uncompressed, ZIP, ZLIB, BZIP2\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"check-for-previously-generated-keys"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#check-for-previously-generated-keys","aria-hidden":"true"}},[this._v("#")]),this._v(" Check for previously generated keys")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("gpg --list-keys\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"generate-a-gpg-key"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#generate-a-gpg-key","aria-hidden":"true"}},[this._v("#")]),this._v(" Generate a GPG Key :")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Run "),t("code",[this._v("gpg --full-generate-key")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("$ gpg --full-generate-key\ngpg (GnuPG) 2.2.13; Copyright (C) 2019 Free Software Foundation, Inc.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\nPlease select what kind of key you want:\n   (1) RSA and RSA (default)\n   (2) DSA and Elgamal\n   (3) DSA (sign only)\n   (4) RSA (sign only)\nYour selection? \nRSA keys may be between 1024 and 4096 bits long.\nWhat keysize do you want? (2048) 4096\nRequested keysize is 4096 bits       \nPlease specify how long the key should be valid.\n         0 = key does not expire\n      <n>  = key expires in n days\n      <n>w = key expires in n weeks\n      <n>m = key expires in n months\n      <n>y = key expires in n years\nKey is valid for? (0) 1y\nKey expires at Sat Apr 11 11:45:54 2020 CEST\nIs this correct? (y/N) y\n                        \nGnuPG needs to construct a user ID to identify your key.\n\nReal name: Tolga SAHIN\nEmail address: htolgasahin@gmail.com\nComment: Example GPG KeyPair     \nYou selected this USER-ID:  \n    \"Tolga SAHIN (Example GPG KeyPair) <htolgasahin@gmail.com>\"\n\nChange (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? O\nWe need to generate a lot of random bytes. It is a good idea to perform\nsome other action (type on the keyboard, move the mouse, utilize the\ndisks) during the prime generation; this gives the random number\ngenerator a better chance to gain enough entropy.\nWe need to generate a lot of random bytes. It is a good idea to perform\nsome other action (type on the keyboard, move the mouse, utilize the\ndisks) during the prime generation; this gives the random number\ngenerator a better chance to gain enough entropy.\ngpg: key 33740549F3B9BF87 marked as ultimately trusted\ngpg: revocation certificate stored as '/Users/hsahin/.gnupg/openpgp-revocs.d/B217D2D7586E394A2C53E75133740549F3B9BF87.rev'\npublic and secret key created and signed.\n\npub   rsa4096 2019-04-12 [SC] [expires: 2020-04-11]\n      B217D2D7586E394A2C53E75133740549F3B9BF87\nuid                      Tolga SAHIN (Example GPG KeyPair) <htolgasahin@gmail.com>\nsub   rsa4096 2019-04-12 [E] [expires: 2020-04-11]\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"tell-git-client-about-your-key"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tell-git-client-about-your-key","aria-hidden":"true"}},[this._v("#")]),this._v(" Tell Git Client About Your Key")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The rest is pretty self explanatory. After you finish all the steps run "),t("code",[this._v("gpg --list-secret-keys --keyid-format LONG")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("sec   rsa4096/33740549F3B9BF87 2019-04-12 [SC] [expires: 2020-04-11]\n      B217D2D7586E394A2C53E75133740549F3B9BF87\nuid                 [ultimate] Tolga SAHIN (Example GPG KeyPair) <htolgasahin@gmail.com>\nssb   rsa4096/275AA5F060C81BA6 2019-04-12 [E] [expires: 2020-04-11]\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Here "),t("code",[this._v("33740549F3B9BF87")]),this._v(" is your signing key ID that we will use to tell your git client.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("git config --global user.signingkey 33740549F3B9BF87\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("git config user.signingkey 33740549F3B9BF87\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"sign-your-commits"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sign-your-commits","aria-hidden":"true"}},[this._v("#")]),this._v(" Sign your commits")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Use "),t("code",[this._v("-S")]),this._v(" flag to sign your commits :")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('git commit -S -m "your commit message"\n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("git config commit.gpgsign true\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("git config --global commit.gpgSign true\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"tell-gitlab-about-your-public-key"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tell-gitlab-about-your-public-key","aria-hidden":"true"}},[this._v("#")]),this._v(" Tell gitlab about your public key :")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("gpg --armor --export 33740549F3B9BF87\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"troubleshooting"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#troubleshooting","aria-hidden":"true"}},[this._v("#")]),this._v(" Troubleshooting :")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("error: gpg failed to sign the data\nfatal: failed to write commit object\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("export GPG_TTY=$(tty)\n\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("git config --global gpg.program /usr/local/MacGPG2/bin/gpg2\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Replace "),t("code",[this._v("/usr/local/MacGPG2/bin/gpg2")]),this._v(" with anything")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("If everything goes well you will now see a "),t("code",[this._v("Verified")]),this._v(" badge next to your commits in git history.")])}],!1,null,null,null);t.default=n.exports}}]);